# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      # - name: vite
      #   run: npm create vite@latest
      - name: Install dependencies
        run: |
          npm install
      # - name: Verify .env file location and contents
      #   run: |
      #     echo "Current working directory:"
      #     pwd
      #     echo "Contents of .env file:"
      #     ls -la .env
      #     cat .env
      - name: Build Vite project
        run: |
          #yarn build
          npm run build
      # - name: Create dot env file
      #   shell: bash
      #   run: |
      #     touch .env
      #     echo "VITE_TEST=${{ secrets.VITE_TEST }}" > .env
      #     echo "VITE_TEST2=${{ vars.VITE_TEST2 }}" > .env
      - name: Run test env
        env:
          VITE_TEST: ${{ secrets.VITE_TEST }}
      # - name: Install Dependencies (prod)
      #   run: yarn install --frozen-lockfile --production
      # - name: Set up dotenv
      #   run: yarn add -D dotenv
      # - name: eslint install
      #   run: npm install --save eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-react
      # - name: Run Tests (JEST)
      #   run: yarn node ./test.js --ci --silent --testPathIgnorePatterns=experimental
      #   env:
      #     CI: true
      #     TEST_ID: ${{ secrets.TEST_ID }}
      # - name: testes
      #   run: process.env
      # - name: Build with environment secrets
      #   run: |
      #     echo "window.VITE_TEST='${{ secrets.VITE_TEST }}';" > ./test.js
      # - name: Run test.py
      #   env:
      #     VITE_TEST: ${{ secrets.VITE_TEST }}
      #   run:
      #     node ./test.js
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
